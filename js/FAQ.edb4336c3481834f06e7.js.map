{"version":3,"sources":["webpack:///./src/Utilities/Api.js","webpack:///./src/Components/Tabs/FAQ.js"],"names":["url","headers","params","axios","get","FAQ","useState","status","content","setContent","useEffect","a","API","kcsArticleJson","data","body","html","className","Loading","Card","source","escapeHtml"],"mappings":"0NAEe,WACPA,GAAgC,IAA3BC,EAA2B,uDAAjB,GAAIC,EAAa,uDAAJ,GAC5B,OAAOC,IAAMC,IAAIJ,EAAK,CAClBC,UACAC,Y,oCC0BGG,UAvBH,WAAM,MACgBC,mBAAS,CAAEC,OAAQ,UAAWC,QAAS,KADvD,WACPA,EADO,KACEC,EADF,KAed,OAZAC,qBAAU,WACN,cAAC,4BAAAC,EAAA,+EAEqCC,EAAQ,gEAF7C,OAEaC,EAFb,OAE8GC,KACvGL,EAAW,CAAEF,OAAQ,YAAaC,QAASK,EAAeE,KAAKC,OAHtE,sDAKOP,EAAW,CAAEF,OAAQ,QAASC,QAAS,KAL9C,wEAAD,KASD,IAEI,yBAAKS,UAAU,qBACE,YAAnBT,EAAQD,QAA2C,UAAnBC,EAAQD,QAAsB,kBAACW,EAAA,EAAD,MAC3C,cAAnBV,EAAQD,QAA0B,kBAACY,EAAA,EAAD,CAAMF,UAAU,YAC/C,kBAAC,IAAD,CAAeG,OAAQZ,EAAQA,QAASa,YAAY","file":"js/FAQ.edb4336c3481834f06e7.js","sourcesContent":["import axios from 'axios';\n\nexport default {\n    get(url, headers = {}, params = {}) {\n        return axios.get(url, {\n            headers,\n            params\n        });\n    },\n    put(url, data = {}, headers = {}) {\n        return axios.put(url, data, {\n            headers\n        });\n    },\n    post(url, headers = {}, data = {}) {\n        return axios.post(url, data, {\n            headers\n        });\n    },\n    delete(url, data = {}, headers = {}) {\n        return axios.delete(url, data, {\n            headers\n        });\n    }\n};\n","import '../../App.scss';\n\nimport React, { useEffect, useState } from 'react';\n\nimport API from '../../Utilities/Api';\nimport { Card } from '@patternfly/react-core/dist/esm/components';\nimport Loading from '../Loading/Loading';\nimport ReactMarkdown from 'react-markdown/with-html';\n\nconst FAQ = () => {\n    const [content, setContent] = useState({ status: 'pending', content: '' });\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const kcsArticleJson = (await API.get('https://access.redhat.com/hydra/rest/drupal/articles/4602981')).data;\n                setContent({ status: 'fulfilled', content: kcsArticleJson.body.html });\n            } catch (error) {\n                setContent({ status: 'error', content: '' });\n                throw `${error}`;\n            }\n        })();\n    }, []);\n\n    return <div className='ins-c-flex-center'>\n        {content.status === 'pending' || content.status === 'error' && <Loading />}\n        {content.status === 'fulfilled' && <Card className='faq-card'>\n            <ReactMarkdown source={content.content} escapeHtml={false} />\n        </Card>}\n    </div>;\n};\n\nexport default FAQ;\n"],"sourceRoot":""}