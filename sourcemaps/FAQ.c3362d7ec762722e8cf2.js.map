{"version":3,"sources":["webpack:///./src/Utilities/Api.js","webpack:///./src/Components/Sections/FAQ.js"],"names":["url","headers","params","axios","useState","status","content","setContent","useEffect","API","kcsArticleJson","data","body","html","Loading","Card","className","CardBody","rehypePlugins","rehypeRaw","rehypeSanitize"],"mappings":"iPAEA,QAAe,SACPA,GAAgC,IAA3BC,EAA2B,uDAAjB,GAAIC,EAAa,uDAAJ,GAC5B,OAAOC,QAAUH,EAAK,CAClBC,UACAC,Y,uEC4BZ,QAzBY,WACR,OAA8BE,cAAS,CAAEC,OAAQ,UAAWC,QAAS,KAArE,eAAOA,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,gBAAU,YACN,iBAAC,6GAEqCC,EAAQ,gEAF7C,OAEaC,EAFb,OAE8GC,KACvGJ,EAAW,CAAEF,OAAQ,YAAaC,QAASI,EAAeE,KAAKC,OAHtE,sDAKON,EAAW,CAAEF,OAAQ,QAASC,QAAS,KAL9C,wEAAD,KASD,IAEI,kBAAC,aAAD,MACkB,YAAnBA,EAAQD,QAA2C,UAAnBC,EAAQD,SAAuB,kBAACS,EAAA,EAAD,MAC7C,cAAnBR,EAAQD,QAA0B,kBAACU,EAAA,EAAD,CAAMC,UAAU,YAC/C,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAUC,cAAe,CAACC,IAAWC,MAAkBd,EAAQA","file":"js/FAQ.b9e9d0d17536f1d49feb.js","sourcesContent":["import axios from 'axios';\n\nexport default {\n    get(url, headers = {}, params = {}) {\n        return axios.get(url, {\n            headers,\n            params\n        });\n    },\n    put(url, data = {}, headers = {}) {\n        return axios.put(url, data, {\n            headers\n        });\n    },\n    post(url, headers = {}, data = {}) {\n        return axios.post(url, data, {\n            headers\n        });\n    },\n    delete(url, data = {}, headers = {}) {\n        return axios.delete(url, data, {\n            headers\n        });\n    }\n};\n","import { Card, CardBody } from '@patternfly/react-core/dist/esm/components';\nimport React, { useEffect, useState } from 'react';\n\nimport API from '../../Utilities/Api';\nimport Loading from '../Loading/Loading';\nimport Markdown from 'react-markdown';\nimport rehypeRaw from 'rehype-raw';\nimport rehypeSanitize from 'rehype-sanitize';\n\nconst FAQ = () => {\n    const [content, setContent] = useState({ status: 'pending', content: '' });\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const kcsArticleJson = (await API.get('https://access.redhat.com/hydra/rest/drupal/articles/4602981')).data;\n                setContent({ status: 'fulfilled', content: kcsArticleJson.body.html });\n            } catch (error) {\n                setContent({ status: 'error', content: '' });\n                throw `${error}`;\n            }\n        })();\n    }, []);\n\n    return <React.Fragment>\n        {(content.status === 'pending' || content.status === 'error') && <Loading />}\n        {content.status === 'fulfilled' && <Card className='faq-card'>\n            <CardBody>\n                <Markdown rehypePlugins={[rehypeRaw, rehypeSanitize]}>{content.content}</Markdown>\n            </CardBody>\n        </Card>}\n    </React.Fragment>;\n};\n\nexport default FAQ;\n"],"sourceRoot":""}